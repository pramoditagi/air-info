<%= form_with(model: flight, local: true) do |form| %>
  <% if flight.errors.any? %>
    <div style="color: red">
      <h2>
        <%= pluralize(flight.errors.count, "error") %> prohibited this flight from being saved:
      </h2>
      <ul>
        <% flight.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="form-group">
    <label class="form-label">Flight Type</label>
    <div class="radio-group">
      <label class="radio-label">
        <input type="radio" name="flight_type" value="today" checked onchange="toggleDateTimeFields()">
        Today's Flight (Time Only)
      </label>
      <label class="radio-label">
        <input type="radio" name="flight_type" value="future" onchange="toggleDateTimeFields()">
        Future Flight (Date & Time)
      </label>
    </div>
  </div>

  <div class="form-group" id="today-fields">
    <%= form.label :std, "STD (Time)" %>
    <%= form.time_field :std_time, 
        class: "form-control", 
        required: true %>
  </div>

  <div class="form-group" id="future-fields" style="display: none;">
    <%= form.label :std, "STD (Date & Time)" %>
    <%= form.datetime_local_field :std_datetime, 
        class: "form-control", 
        min: Time.current.strftime('%Y-%m-%dT%H:%M') %>
  </div>

  <div class="form-group" id="today-fields-etd">
    <%= form.label :etd, "ETD (Time)" %>
    <%= form.time_field :etd_time, 
        class: "form-control", 
        required: true %>
  </div>

  <div class="form-group" id="future-fields-etd" style="display: none;">
    <%= form.label :etd, "ETD (Date & Time)" %>
    <%= form.datetime_local_field :etd_datetime, 
        class: "form-control", 
        min: Time.current.strftime('%Y-%m-%dT%H:%M') %>
  </div>

  <div class="form-group">
    <%= form.label :airline %>
    <%= form.text_field :airline, class: "form-control", required: true %>
  </div>

  <div class="form-group">
    <%= form.label :flight_no, "Flight No" %>
    <%= form.text_field :flight_no, class: "form-control", required: true %>
  </div>

  <div class="form-group">
    <%= form.label :destination %>
    <%= form.text_field :destination, class: "form-control", required: true %>
  </div>

  <div class="form-group">
    <%= form.label :status %>
    <%= form.select :status, ['Arrived', 'Delayed', 'On Time', 'Cancelled', 'Departed', 'Boarding', 'Security', 'Check-in'], {}, class: "form-control" %>
  </div>

  <div class="form-group">
    <%= form.label :gate %>
    <%= form.text_field :gate, class: "form-control", required: true %>
  </div>

  <div class="form-actions" style="display: flex; gap: 1rem;">
    <% if action_name == "new" %>
      <%= form.submit "Create Flight", class: "submit-button", style: "width: 50%;" %>
    <% else %>
      <%= form.submit "Update Flight", class: "submit-button", style: "width: 50%;" %>
    <% end %>
    <button type="button" onclick="window.location.href='<%= flights_path %>'" class="back-button" style="width: 50%; text-align: center;">Back to Board</button>
  </div>
<% end %>

<script>
  function toggleDateTimeFields() {
    const flightType = document.querySelector('input[name="flight_type"]:checked').value;
    const todayFields = document.getElementById('today-fields');
    const todayFieldsEtd = document.getElementById('today-fields-etd');
    const futureFields = document.getElementById('future-fields');
    const futureFieldsEtd = document.getElementById('future-fields-etd');
    
    if (flightType === 'today') {
      todayFields.style.display = 'block';
      todayFieldsEtd.style.display = 'block';
      futureFields.style.display = 'none';
      futureFieldsEtd.style.display = 'none';
      
      // Set required on today fields and remove from future fields
      const todayStdField = todayFields.querySelector('input');
      const todayEtdField = todayFieldsEtd.querySelector('input');
      const futureStdField = futureFields.querySelector('input');
      const futureEtdField = futureFieldsEtd.querySelector('input');
      
      if (todayStdField) todayStdField.required = true;
      if (todayEtdField) todayEtdField.required = true;
      if (futureStdField) futureStdField.required = false;
      if (futureEtdField) futureEtdField.required = false;
      
      // Set min time for today's fields
      const now = new Date();
      const currentTime = now.toTimeString().slice(0, 5);
      
      if (todayStdField) todayStdField.min = currentTime;
      if (todayEtdField) todayEtdField.min = currentTime;
    } else {
      todayFields.style.display = 'none';
      todayFieldsEtd.style.display = 'none';
      futureFields.style.display = 'block';
      futureFieldsEtd.style.display = 'block';
      
      // Set required on future fields and remove from today fields
      const todayStdField = todayFields.querySelector('input');
      const todayEtdField = todayFieldsEtd.querySelector('input');
      const futureStdField = futureFields.querySelector('input');
      const futureEtdField = futureFieldsEtd.querySelector('input');
      
      if (todayStdField) todayStdField.required = false;
      if (todayEtdField) todayEtdField.required = false;
      if (futureStdField) futureStdField.required = true;
      if (futureEtdField) futureEtdField.required = true;
      
      // Set min datetime for future fields
      const now = new Date();
      const currentDateTime = now.toISOString().slice(0, 16);
      
      if (futureStdField) futureStdField.min = currentDateTime;
      if (futureEtdField) futureEtdField.min = currentDateTime;
    }
  }
  
  // Initialize on page load
  document.addEventListener('DOMContentLoaded', function() {
    toggleDateTimeFields();
  });
</script>
